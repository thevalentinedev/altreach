"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/twitter/extract-with-session/route";
exports.ids = ["app/api/twitter/extract-with-session/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "puppeteer":
/*!****************************!*\
  !*** external "puppeteer" ***!
  \****************************/
/***/ ((module) => {

module.exports = import("puppeteer");;

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ftwitter%2Fextract-with-session%2Froute&page=%2Fapi%2Ftwitter%2Fextract-with-session%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftwitter%2Fextract-with-session%2Froute.ts&appDir=%2Fhome%2Fvalentinedev%2FDownloads%2Faltreach-session%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fvalentinedev%2FDownloads%2Faltreach-session&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ftwitter%2Fextract-with-session%2Froute&page=%2Fapi%2Ftwitter%2Fextract-with-session%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftwitter%2Fextract-with-session%2Froute.ts&appDir=%2Fhome%2Fvalentinedev%2FDownloads%2Faltreach-session%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fvalentinedev%2FDownloads%2Faltreach-session&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _home_valentinedev_Downloads_altreach_session_app_api_twitter_extract_with_session_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/twitter/extract-with-session/route.ts */ \"(rsc)/./app/api/twitter/extract-with-session/route.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_home_valentinedev_Downloads_altreach_session_app_api_twitter_extract_with_session_route_ts__WEBPACK_IMPORTED_MODULE_3__]);\n_home_valentinedev_Downloads_altreach_session_app_api_twitter_extract_with_session_route_ts__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/twitter/extract-with-session/route\",\n        pathname: \"/api/twitter/extract-with-session\",\n        filename: \"route\",\n        bundlePath: \"app/api/twitter/extract-with-session/route\"\n    },\n    resolvedPagePath: \"/home/valentinedev/Downloads/altreach-session/app/api/twitter/extract-with-session/route.ts\",\n    nextConfigOutput,\n    userland: _home_valentinedev_Downloads_altreach_session_app_api_twitter_extract_with_session_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/twitter/extract-with-session/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZ0d2l0dGVyJTJGZXh0cmFjdC13aXRoLXNlc3Npb24lMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRnR3aXR0ZXIlMkZleHRyYWN0LXdpdGgtc2Vzc2lvbiUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRnR3aXR0ZXIlMkZleHRyYWN0LXdpdGgtc2Vzc2lvbiUyRnJvdXRlLnRzJmFwcERpcj0lMkZob21lJTJGdmFsZW50aW5lZGV2JTJGRG93bmxvYWRzJTJGYWx0cmVhY2gtc2Vzc2lvbiUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGaG9tZSUyRnZhbGVudGluZWRldiUyRkRvd25sb2FkcyUyRmFsdHJlYWNoLXNlc3Npb24maXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQzJDO0FBQ3hIO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWlFO0FBQ3pFO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDdUg7O0FBRXZILHFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8/OTRjMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvaG9tZS92YWxlbnRpbmVkZXYvRG93bmxvYWRzL2FsdHJlYWNoLXNlc3Npb24vYXBwL2FwaS90d2l0dGVyL2V4dHJhY3Qtd2l0aC1zZXNzaW9uL3JvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS90d2l0dGVyL2V4dHJhY3Qtd2l0aC1zZXNzaW9uL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvdHdpdHRlci9leHRyYWN0LXdpdGgtc2Vzc2lvblwiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvdHdpdHRlci9leHRyYWN0LXdpdGgtc2Vzc2lvbi9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9ob21lL3ZhbGVudGluZWRldi9Eb3dubG9hZHMvYWx0cmVhY2gtc2Vzc2lvbi9hcHAvYXBpL3R3aXR0ZXIvZXh0cmFjdC13aXRoLXNlc3Npb24vcm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL3R3aXR0ZXIvZXh0cmFjdC13aXRoLXNlc3Npb24vcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ftwitter%2Fextract-with-session%2Froute&page=%2Fapi%2Ftwitter%2Fextract-with-session%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftwitter%2Fextract-with-session%2Froute.ts&appDir=%2Fhome%2Fvalentinedev%2FDownloads%2Faltreach-session%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fvalentinedev%2FDownloads%2Faltreach-session&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/twitter/extract-with-session/route.ts":
/*!*******************************************************!*\
  !*** ./app/api/twitter/extract-with-session/route.ts ***!
  \*******************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_browser_pool__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/browser-pool */ \"(rsc)/./lib/browser-pool.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_browser_pool__WEBPACK_IMPORTED_MODULE_1__]);\n_lib_browser_pool__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n// In-memory cache (replace with a proper database in production)\nconst authCache = {};\nfunction saveAuthToCache(sessionId, authData) {\n    authCache[sessionId] = authData;\n}\nfunction getAuthFromCache(sessionId) {\n    return authCache[sessionId];\n}\nasync function POST(request) {\n    let browser = null;\n    let page = null;\n    try {\n        const { url, authToken, ct0Token } = await request.json();\n        if (!url) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"URL is required\"\n            }, {\n                status: 400\n            });\n        }\n        if (!authToken) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Authentication token is required\"\n            }, {\n                status: 400\n            });\n        }\n        // Validate URL format\n        let validUrl;\n        try {\n            validUrl = new URL(url);\n        } catch  {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Invalid URL format\"\n            }, {\n                status: 400\n            });\n        }\n        // Check if it's a Twitter/X URL\n        const isTwitterUrl = validUrl.hostname === \"twitter.com\" || validUrl.hostname === \"x.com\" || validUrl.hostname === \"www.twitter.com\" || validUrl.hostname === \"www.x.com\";\n        if (!isTwitterUrl) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Not a valid Twitter/X URL\"\n            }, {\n                status: 400\n            });\n        }\n        console.log(\"\\uD83D\\uDE80 Starting tweet extraction for:\", url);\n        // Get browser from pool instead of launching new one\n        browser = await _lib_browser_pool__WEBPACK_IMPORTED_MODULE_1__[\"default\"].acquire();\n        page = await _lib_browser_pool__WEBPACK_IMPORTED_MODULE_1__[\"default\"].createPage(browser);\n        console.log(\"\\uD83C\\uDF6A Injecting authentication tokens...\");\n        // Inject auth_token cookie into Twitter domain\n        const cookies = [\n            {\n                name: \"auth_token\",\n                value: authToken,\n                domain: \".twitter.com\",\n                path: \"/\",\n                httpOnly: true,\n                secure: true,\n                sameSite: \"None\"\n            },\n            {\n                name: \"auth_token\",\n                value: authToken,\n                domain: \".x.com\",\n                path: \"/\",\n                httpOnly: true,\n                secure: true,\n                sameSite: \"None\"\n            }\n        ];\n        // Add CT0 token if provided\n        if (ct0Token) {\n            cookies.push({\n                name: \"ct0\",\n                value: ct0Token,\n                domain: \".twitter.com\",\n                path: \"/\",\n                httpOnly: false,\n                secure: true,\n                sameSite: \"None\"\n            }, {\n                name: \"ct0\",\n                value: ct0Token,\n                domain: \".x.com\",\n                path: \"/\",\n                httpOnly: false,\n                secure: true,\n                sameSite: \"None\"\n            });\n        }\n        await page.setCookie(...cookies);\n        console.log(\"\\uD83D\\uDD17 Navigating to tweet URL...\");\n        // Navigate to the tweet URL with timeout\n        await page.goto(url, {\n            waitUntil: \"networkidle2\",\n            timeout: 20000\n        });\n        console.log(\"⏳ Waiting for tweet content to render...\");\n        // Wait for the main tweet content to render\n        await page.waitForSelector('div[data-testid=\"tweetText\"]', {\n            timeout: 10000\n        });\n        console.log(\"\\uD83D\\uDCDD Extracting tweet content...\");\n        // Extract the main tweet text and images in parallel\n        const [tweetContent, imageUrls] = await Promise.all([\n            page.evaluate(()=>{\n                const tweetElement = document.querySelector('div[data-testid=\"tweetText\"]');\n                return tweetElement ? tweetElement.textContent?.trim() || null : null;\n            }),\n            page.evaluate(()=>{\n                const images = [];\n                const imageContainers = document.querySelectorAll('div[data-testid=\"tweetPhoto\"]');\n                imageContainers.forEach((container)=>{\n                    const img = container.querySelector(\"img\");\n                    if (img && img.src) {\n                        const highResUrl = img.src.replace(/&name=\\w+$/, \"&name=large\");\n                        images.push(highResUrl);\n                    }\n                });\n                return images;\n            })\n        ]);\n        console.log(\"\\uD83D\\uDDBC️ Extracted images:\", imageUrls);\n        // Validate extracted content\n        if (!tweetContent) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Unable to extract tweet content. Possibly due to invalid or expired session cookie.\"\n            });\n        }\n        console.log(\"✅ Tweet content extracted successfully\");\n        // Return successful extraction\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            content: tweetContent,\n            source: url,\n            images: imageUrls.length > 0 ? imageUrls : undefined\n        });\n    } catch (error) {\n        console.error(\"❌ Error during tweet extraction:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Unable to extract tweet content. Possibly due to invalid or expired session cookie.\"\n        });\n    } finally{\n        // Clean up page and release browser back to pool\n        if (page) {\n            try {\n                await page.close();\n                console.log(\"\\uD83D\\uDCC4 Page closed successfully\");\n            } catch (closeError) {\n                console.error(\"⚠️ Error closing page:\", closeError);\n            }\n        }\n        if (browser) {\n            try {\n                await _lib_browser_pool__WEBPACK_IMPORTED_MODULE_1__[\"default\"].release(browser);\n                console.log(\"\\uD83D\\uDD04 Browser released back to pool\");\n            } catch (releaseError) {\n                console.error(\"⚠️ Error releasing browser:\", releaseError);\n            }\n        }\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/twitter/extract-with-session/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/browser-pool.ts":
/*!*****************************!*\
  !*** ./lib/browser-pool.ts ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var puppeteer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! puppeteer */ \"puppeteer\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([puppeteer__WEBPACK_IMPORTED_MODULE_0__]);\npuppeteer__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nclass BrowserPool {\n    constructor(options){\n        this.browsers = [];\n        this.cleanupInterval = null;\n        this.maxConcurrency = options.maxConcurrency;\n        this.maxIdleTime = options.maxIdleTime;\n        this.puppeteerOptions = options.puppeteerOptions || {\n            headless: \"new\",\n            args: [\n                \"--no-sandbox\",\n                \"--disable-setuid-sandbox\",\n                \"--disable-dev-shm-usage\",\n                \"--disable-gpu\",\n                \"--disable-web-security\",\n                \"--disable-features=IsolateOrigins,site-per-process\",\n                \"--memory-pressure-off\",\n                \"--max_old_space_size=4096\"\n            ],\n            ignoreHTTPSErrors: true\n        };\n        // Start cleanup interval to close idle browsers\n        this.startCleanupInterval();\n    }\n    async acquire() {\n        // Try to find an available browser\n        const availableBrowser = this.browsers.find((b)=>!b.inUse && this.isBrowserAlive(b.browser));\n        if (availableBrowser) {\n            availableBrowser.inUse = true;\n            availableBrowser.lastUsed = Date.now();\n            console.log(`♻️ Reusing existing browser (${this.browsers.length} total)`);\n            return availableBrowser.browser;\n        }\n        // Create new browser if under limit\n        if (this.browsers.length < this.maxConcurrency) {\n            const browser = await puppeteer__WEBPACK_IMPORTED_MODULE_0__[\"default\"].launch(this.puppeteerOptions);\n            const pooledBrowser = {\n                browser,\n                lastUsed: Date.now(),\n                inUse: true\n            };\n            this.browsers.push(pooledBrowser);\n            console.log(`🚀 Created new browser (${this.browsers.length}/${this.maxConcurrency})`);\n            return browser;\n        }\n        // Wait for an available browser\n        console.log(`⏳ Waiting for available browser...`);\n        return new Promise((resolve, reject)=>{\n            const checkInterval = setInterval(()=>{\n                const availableBrowser = this.browsers.find((b)=>!b.inUse && this.isBrowserAlive(b.browser));\n                if (availableBrowser) {\n                    clearInterval(checkInterval);\n                    availableBrowser.inUse = true;\n                    availableBrowser.lastUsed = Date.now();\n                    resolve(availableBrowser.browser);\n                }\n            }, 100);\n            // Timeout after 30 seconds\n            setTimeout(()=>{\n                clearInterval(checkInterval);\n                reject(new Error(\"Browser pool timeout: No browser available\"));\n            }, 30000);\n        });\n    }\n    async release(browser) {\n        const pooledBrowser = this.browsers.find((b)=>b.browser === browser);\n        if (pooledBrowser) {\n            pooledBrowser.inUse = false;\n            pooledBrowser.lastUsed = Date.now();\n            console.log(`✅ Released browser back to pool`);\n        }\n    }\n    async createPage(browser) {\n        const page = await browser.newPage();\n        // Set realistic browser headers and viewport\n        await page.setUserAgent(\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36\");\n        await page.setViewport({\n            width: 1280,\n            height: 800\n        });\n        // Optimize page performance\n        await page.setRequestInterception(true);\n        page.on(\"request\", (req)=>{\n            // Block unnecessary resources to speed up loading\n            const resourceType = req.resourceType();\n            if ([\n                \"stylesheet\",\n                \"font\",\n                \"image\"\n            ].includes(resourceType)) {\n                req.abort();\n            } else {\n                req.continue();\n            }\n        });\n        return page;\n    }\n    isBrowserAlive(browser) {\n        try {\n            return browser.isConnected();\n        } catch  {\n            return false;\n        }\n    }\n    startCleanupInterval() {\n        this.cleanupInterval = setInterval(async ()=>{\n            const now = Date.now();\n            const browsersToClose = this.browsers.filter((b)=>!b.inUse && now - b.lastUsed > this.maxIdleTime);\n            for (const pooledBrowser of browsersToClose){\n                try {\n                    await pooledBrowser.browser.close();\n                    console.log(`🗑️ Closed idle browser`);\n                } catch (error) {\n                    console.error(\"Error closing idle browser:\", error);\n                }\n            }\n            // Remove closed browsers from pool\n            this.browsers = this.browsers.filter((b)=>!browsersToClose.includes(b) && this.isBrowserAlive(b.browser));\n        }, 60000) // Check every minute\n        ;\n    }\n    async destroy() {\n        if (this.cleanupInterval) {\n            clearInterval(this.cleanupInterval);\n        }\n        // Close all browsers\n        await Promise.all(this.browsers.map(async (pooledBrowser)=>{\n            try {\n                await pooledBrowser.browser.close();\n            } catch (error) {\n                console.error(\"Error closing browser during destroy:\", error);\n            }\n        }));\n        this.browsers = [];\n        console.log(`🔒 Browser pool destroyed`);\n    }\n}\n// Create singleton browser pool\nconst browserPool = new BrowserPool({\n    maxConcurrency: 3,\n    maxIdleTime: 5 * 60 * 1000\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (browserPool);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUErQkE7Z0JBQy9DO1lBQ0Y7WUFFQSxtQ0FBbUM7WUFDbkMsSUFBSSxDQUFDcEQsUUFBUSxHQUFHLElBQUksQ0FBQ0EsUUFBUSxDQUFDa0QsTUFBTSxDQUFDLENBQUN0QyxJQUFNLENBQUNxQyxnQkFBZ0JKLFFBQVEsQ0FBQ2pDLE1BQU0sSUFBSSxDQUFDRSxjQUFjLENBQUNGLEVBQUVHLE9BQU87UUFDM0csR0FBRyxPQUFPLHFCQUFxQjs7SUFDakM7SUFFQSxNQUFNc0MsVUFBeUI7UUFDN0IsSUFBSSxJQUFJLENBQUNwRCxlQUFlLEVBQUU7WUFDeEI2QixjQUFjLElBQUksQ0FBQzdCLGVBQWU7UUFDcEM7UUFFQSxxQkFBcUI7UUFDckIsTUFBTXdCLFFBQVE2QixHQUFHLENBQ2YsSUFBSSxDQUFDdEQsUUFBUSxDQUFDdUQsR0FBRyxDQUFDLE9BQU9oQztZQUN2QixJQUFJO2dCQUNGLE1BQU1BLGNBQWNSLE9BQU8sQ0FBQ29DLEtBQUs7WUFDbkMsRUFBRSxPQUFPQyxPQUFPO2dCQUNkakMsUUFBUWlDLEtBQUssQ0FBQyx5Q0FBeUNBO1lBQ3pEO1FBQ0Y7UUFHRixJQUFJLENBQUNwRCxRQUFRLEdBQUcsRUFBRTtRQUNsQm1CLFFBQVFDLEdBQUcsQ0FBQyxDQUFDLHlCQUF5QixDQUFDO0lBQ3pDO0FBQ0Y7QUFFQSxnQ0FBZ0M7QUFDaEMsTUFBTW9DLGNBQWMsSUFBSTNELFlBQVk7SUFDbENLLGdCQUFnQjtJQUNoQkMsYUFBYSxJQUFJLEtBQUs7QUFDeEI7QUFFQSxpRUFBZXFELFdBQVdBLEVBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS12MC1wcm9qZWN0Ly4vbGliL2Jyb3dzZXItcG9vbC50cz8zNTZiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBwdXBwZXRlZXIsIHsgdHlwZSBCcm93c2VyLCB0eXBlIFBhZ2UgfSBmcm9tIFwicHVwcGV0ZWVyXCJcblxuaW50ZXJmYWNlIEJyb3dzZXJQb29sT3B0aW9ucyB7XG4gIG1heENvbmN1cnJlbmN5OiBudW1iZXJcbiAgbWF4SWRsZVRpbWU6IG51bWJlciAvLyBpbiBtaWxsaXNlY29uZHNcbiAgcHVwcGV0ZWVyT3B0aW9ucz86IGFueVxufVxuXG5pbnRlcmZhY2UgUG9vbGVkQnJvd3NlciB7XG4gIGJyb3dzZXI6IEJyb3dzZXJcbiAgbGFzdFVzZWQ6IG51bWJlclxuICBpblVzZTogYm9vbGVhblxufVxuXG5jbGFzcyBCcm93c2VyUG9vbCB7XG4gIHByaXZhdGUgYnJvd3NlcnM6IFBvb2xlZEJyb3dzZXJbXSA9IFtdXG4gIHByaXZhdGUgbWF4Q29uY3VycmVuY3k6IG51bWJlclxuICBwcml2YXRlIG1heElkbGVUaW1lOiBudW1iZXJcbiAgcHJpdmF0ZSBwdXBwZXRlZXJPcHRpb25zOiBhbnlcbiAgcHJpdmF0ZSBjbGVhbnVwSW50ZXJ2YWw6IE5vZGVKUy5UaW1lb3V0IHwgbnVsbCA9IG51bGxcblxuICBjb25zdHJ1Y3RvcihvcHRpb25zOiBCcm93c2VyUG9vbE9wdGlvbnMpIHtcbiAgICB0aGlzLm1heENvbmN1cnJlbmN5ID0gb3B0aW9ucy5tYXhDb25jdXJyZW5jeVxuICAgIHRoaXMubWF4SWRsZVRpbWUgPSBvcHRpb25zLm1heElkbGVUaW1lXG4gICAgdGhpcy5wdXBwZXRlZXJPcHRpb25zID0gb3B0aW9ucy5wdXBwZXRlZXJPcHRpb25zIHx8IHtcbiAgICAgIGhlYWRsZXNzOiBcIm5ld1wiLFxuICAgICAgYXJnczogW1xuICAgICAgICBcIi0tbm8tc2FuZGJveFwiLFxuICAgICAgICBcIi0tZGlzYWJsZS1zZXR1aWQtc2FuZGJveFwiLFxuICAgICAgICBcIi0tZGlzYWJsZS1kZXYtc2htLXVzYWdlXCIsXG4gICAgICAgIFwiLS1kaXNhYmxlLWdwdVwiLFxuICAgICAgICBcIi0tZGlzYWJsZS13ZWItc2VjdXJpdHlcIixcbiAgICAgICAgXCItLWRpc2FibGUtZmVhdHVyZXM9SXNvbGF0ZU9yaWdpbnMsc2l0ZS1wZXItcHJvY2Vzc1wiLFxuICAgICAgICBcIi0tbWVtb3J5LXByZXNzdXJlLW9mZlwiLFxuICAgICAgICBcIi0tbWF4X29sZF9zcGFjZV9zaXplPTQwOTZcIixcbiAgICAgIF0sXG4gICAgICBpZ25vcmVIVFRQU0Vycm9yczogdHJ1ZSxcbiAgICB9XG5cbiAgICAvLyBTdGFydCBjbGVhbnVwIGludGVydmFsIHRvIGNsb3NlIGlkbGUgYnJvd3NlcnNcbiAgICB0aGlzLnN0YXJ0Q2xlYW51cEludGVydmFsKClcbiAgfVxuXG4gIGFzeW5jIGFjcXVpcmUoKTogUHJvbWlzZTxCcm93c2VyPiB7XG4gICAgLy8gVHJ5IHRvIGZpbmQgYW4gYXZhaWxhYmxlIGJyb3dzZXJcbiAgICBjb25zdCBhdmFpbGFibGVCcm93c2VyID0gdGhpcy5icm93c2Vycy5maW5kKChiKSA9PiAhYi5pblVzZSAmJiB0aGlzLmlzQnJvd3NlckFsaXZlKGIuYnJvd3NlcikpXG5cbiAgICBpZiAoYXZhaWxhYmxlQnJvd3Nlcikge1xuICAgICAgYXZhaWxhYmxlQnJvd3Nlci5pblVzZSA9IHRydWVcbiAgICAgIGF2YWlsYWJsZUJyb3dzZXIubGFzdFVzZWQgPSBEYXRlLm5vdygpXG4gICAgICBjb25zb2xlLmxvZyhg4pm777iPIFJldXNpbmcgZXhpc3RpbmcgYnJvd3NlciAoJHt0aGlzLmJyb3dzZXJzLmxlbmd0aH0gdG90YWwpYClcbiAgICAgIHJldHVybiBhdmFpbGFibGVCcm93c2VyLmJyb3dzZXJcbiAgICB9XG5cbiAgICAvLyBDcmVhdGUgbmV3IGJyb3dzZXIgaWYgdW5kZXIgbGltaXRcbiAgICBpZiAodGhpcy5icm93c2Vycy5sZW5ndGggPCB0aGlzLm1heENvbmN1cnJlbmN5KSB7XG4gICAgICBjb25zdCBicm93c2VyID0gYXdhaXQgcHVwcGV0ZWVyLmxhdW5jaCh0aGlzLnB1cHBldGVlck9wdGlvbnMpXG4gICAgICBjb25zdCBwb29sZWRCcm93c2VyOiBQb29sZWRCcm93c2VyID0ge1xuICAgICAgICBicm93c2VyLFxuICAgICAgICBsYXN0VXNlZDogRGF0ZS5ub3coKSxcbiAgICAgICAgaW5Vc2U6IHRydWUsXG4gICAgICB9XG5cbiAgICAgIHRoaXMuYnJvd3NlcnMucHVzaChwb29sZWRCcm93c2VyKVxuICAgICAgY29uc29sZS5sb2coYPCfmoAgQ3JlYXRlZCBuZXcgYnJvd3NlciAoJHt0aGlzLmJyb3dzZXJzLmxlbmd0aH0vJHt0aGlzLm1heENvbmN1cnJlbmN5fSlgKVxuICAgICAgcmV0dXJuIGJyb3dzZXJcbiAgICB9XG5cbiAgICAvLyBXYWl0IGZvciBhbiBhdmFpbGFibGUgYnJvd3NlclxuICAgIGNvbnNvbGUubG9nKGDij7MgV2FpdGluZyBmb3IgYXZhaWxhYmxlIGJyb3dzZXIuLi5gKVxuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICBjb25zdCBjaGVja0ludGVydmFsID0gc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgICAgICBjb25zdCBhdmFpbGFibGVCcm93c2VyID0gdGhpcy5icm93c2Vycy5maW5kKChiKSA9PiAhYi5pblVzZSAmJiB0aGlzLmlzQnJvd3NlckFsaXZlKGIuYnJvd3NlcikpXG5cbiAgICAgICAgaWYgKGF2YWlsYWJsZUJyb3dzZXIpIHtcbiAgICAgICAgICBjbGVhckludGVydmFsKGNoZWNrSW50ZXJ2YWwpXG4gICAgICAgICAgYXZhaWxhYmxlQnJvd3Nlci5pblVzZSA9IHRydWVcbiAgICAgICAgICBhdmFpbGFibGVCcm93c2VyLmxhc3RVc2VkID0gRGF0ZS5ub3coKVxuICAgICAgICAgIHJlc29sdmUoYXZhaWxhYmxlQnJvd3Nlci5icm93c2VyKVxuICAgICAgICB9XG4gICAgICB9LCAxMDApXG5cbiAgICAgIC8vIFRpbWVvdXQgYWZ0ZXIgMzAgc2Vjb25kc1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIGNsZWFySW50ZXJ2YWwoY2hlY2tJbnRlcnZhbClcbiAgICAgICAgcmVqZWN0KG5ldyBFcnJvcihcIkJyb3dzZXIgcG9vbCB0aW1lb3V0OiBObyBicm93c2VyIGF2YWlsYWJsZVwiKSlcbiAgICAgIH0sIDMwMDAwKVxuICAgIH0pXG4gIH1cblxuICBhc3luYyByZWxlYXNlKGJyb3dzZXI6IEJyb3dzZXIpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICBjb25zdCBwb29sZWRCcm93c2VyID0gdGhpcy5icm93c2Vycy5maW5kKChiKSA9PiBiLmJyb3dzZXIgPT09IGJyb3dzZXIpXG5cbiAgICBpZiAocG9vbGVkQnJvd3Nlcikge1xuICAgICAgcG9vbGVkQnJvd3Nlci5pblVzZSA9IGZhbHNlXG4gICAgICBwb29sZWRCcm93c2VyLmxhc3RVc2VkID0gRGF0ZS5ub3coKVxuICAgICAgY29uc29sZS5sb2coYOKchSBSZWxlYXNlZCBicm93c2VyIGJhY2sgdG8gcG9vbGApXG4gICAgfVxuICB9XG5cbiAgYXN5bmMgY3JlYXRlUGFnZShicm93c2VyOiBCcm93c2VyKTogUHJvbWlzZTxQYWdlPiB7XG4gICAgY29uc3QgcGFnZSA9IGF3YWl0IGJyb3dzZXIubmV3UGFnZSgpXG5cbiAgICAvLyBTZXQgcmVhbGlzdGljIGJyb3dzZXIgaGVhZGVycyBhbmQgdmlld3BvcnRcbiAgICBhd2FpdCBwYWdlLnNldFVzZXJBZ2VudChcbiAgICAgIFwiTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEyMC4wLjAuMCBTYWZhcmkvNTM3LjM2XCIsXG4gICAgKVxuICAgIGF3YWl0IHBhZ2Uuc2V0Vmlld3BvcnQoeyB3aWR0aDogMTI4MCwgaGVpZ2h0OiA4MDAgfSlcblxuICAgIC8vIE9wdGltaXplIHBhZ2UgcGVyZm9ybWFuY2VcbiAgICBhd2FpdCBwYWdlLnNldFJlcXVlc3RJbnRlcmNlcHRpb24odHJ1ZSlcbiAgICBwYWdlLm9uKFwicmVxdWVzdFwiLCAocmVxKSA9PiB7XG4gICAgICAvLyBCbG9jayB1bm5lY2Vzc2FyeSByZXNvdXJjZXMgdG8gc3BlZWQgdXAgbG9hZGluZ1xuICAgICAgY29uc3QgcmVzb3VyY2VUeXBlID0gcmVxLnJlc291cmNlVHlwZSgpXG4gICAgICBpZiAoW1wic3R5bGVzaGVldFwiLCBcImZvbnRcIiwgXCJpbWFnZVwiXS5pbmNsdWRlcyhyZXNvdXJjZVR5cGUpKSB7XG4gICAgICAgIHJlcS5hYm9ydCgpXG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXEuY29udGludWUoKVxuICAgICAgfVxuICAgIH0pXG5cbiAgICByZXR1cm4gcGFnZVxuICB9XG5cbiAgcHJpdmF0ZSBpc0Jyb3dzZXJBbGl2ZShicm93c2VyOiBCcm93c2VyKTogYm9vbGVhbiB7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiBicm93c2VyLmlzQ29ubmVjdGVkKClcbiAgICB9IGNhdGNoIHtcbiAgICAgIHJldHVybiBmYWxzZVxuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgc3RhcnRDbGVhbnVwSW50ZXJ2YWwoKTogdm9pZCB7XG4gICAgdGhpcy5jbGVhbnVwSW50ZXJ2YWwgPSBzZXRJbnRlcnZhbChhc3luYyAoKSA9PiB7XG4gICAgICBjb25zdCBub3cgPSBEYXRlLm5vdygpXG4gICAgICBjb25zdCBicm93c2Vyc1RvQ2xvc2UgPSB0aGlzLmJyb3dzZXJzLmZpbHRlcigoYikgPT4gIWIuaW5Vc2UgJiYgbm93IC0gYi5sYXN0VXNlZCA+IHRoaXMubWF4SWRsZVRpbWUpXG5cbiAgICAgIGZvciAoY29uc3QgcG9vbGVkQnJvd3NlciBvZiBicm93c2Vyc1RvQ2xvc2UpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBhd2FpdCBwb29sZWRCcm93c2VyLmJyb3dzZXIuY2xvc2UoKVxuICAgICAgICAgIGNvbnNvbGUubG9nKGDwn5eR77iPIENsb3NlZCBpZGxlIGJyb3dzZXJgKVxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBjbG9zaW5nIGlkbGUgYnJvd3NlcjpcIiwgZXJyb3IpXG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8gUmVtb3ZlIGNsb3NlZCBicm93c2VycyBmcm9tIHBvb2xcbiAgICAgIHRoaXMuYnJvd3NlcnMgPSB0aGlzLmJyb3dzZXJzLmZpbHRlcigoYikgPT4gIWJyb3dzZXJzVG9DbG9zZS5pbmNsdWRlcyhiKSAmJiB0aGlzLmlzQnJvd3NlckFsaXZlKGIuYnJvd3NlcikpXG4gICAgfSwgNjAwMDApIC8vIENoZWNrIGV2ZXJ5IG1pbnV0ZVxuICB9XG5cbiAgYXN5bmMgZGVzdHJveSgpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICBpZiAodGhpcy5jbGVhbnVwSW50ZXJ2YWwpIHtcbiAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5jbGVhbnVwSW50ZXJ2YWwpXG4gICAgfVxuXG4gICAgLy8gQ2xvc2UgYWxsIGJyb3dzZXJzXG4gICAgYXdhaXQgUHJvbWlzZS5hbGwoXG4gICAgICB0aGlzLmJyb3dzZXJzLm1hcChhc3luYyAocG9vbGVkQnJvd3NlcikgPT4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGF3YWl0IHBvb2xlZEJyb3dzZXIuYnJvd3Nlci5jbG9zZSgpXG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIGNsb3NpbmcgYnJvd3NlciBkdXJpbmcgZGVzdHJveTpcIiwgZXJyb3IpXG4gICAgICAgIH1cbiAgICAgIH0pLFxuICAgIClcblxuICAgIHRoaXMuYnJvd3NlcnMgPSBbXVxuICAgIGNvbnNvbGUubG9nKGDwn5SSIEJyb3dzZXIgcG9vbCBkZXN0cm95ZWRgKVxuICB9XG59XG5cbi8vIENyZWF0ZSBzaW5nbGV0b24gYnJvd3NlciBwb29sXG5jb25zdCBicm93c2VyUG9vbCA9IG5ldyBCcm93c2VyUG9vbCh7XG4gIG1heENvbmN1cnJlbmN5OiAzLCAvLyBNYXhpbXVtIDMgY29uY3VycmVudCBicm93c2Vyc1xuICBtYXhJZGxlVGltZTogNSAqIDYwICogMTAwMCwgLy8gQ2xvc2UgYnJvd3NlcnMgaWRsZSBmb3IgNSBtaW51dGVzXG59KVxuXG5leHBvcnQgZGVmYXVsdCBicm93c2VyUG9vbFxuIl0sIm5hbWVzIjpbInB1cHBldGVlciIsIkJyb3dzZXJQb29sIiwiY29uc3RydWN0b3IiLCJvcHRpb25zIiwiYnJvd3NlcnMiLCJjbGVhbnVwSW50ZXJ2YWwiLCJtYXhDb25jdXJyZW5jeSIsIm1heElkbGVUaW1lIiwicHVwcGV0ZWVyT3B0aW9ucyIsImhlYWRsZXNzIiwiYXJncyIsImlnbm9yZUhUVFBTRXJyb3JzIiwic3RhcnRDbGVhbnVwSW50ZXJ2YWwiLCJhY3F1aXJlIiwiYXZhaWxhYmxlQnJvd3NlciIsImZpbmQiLCJiIiwiaW5Vc2UiLCJpc0Jyb3dzZXJBbGl2ZSIsImJyb3dzZXIiLCJsYXN0VXNlZCIsIkRhdGUiLCJub3ciLCJjb25zb2xlIiwibG9nIiwibGVuZ3RoIiwibGF1bmNoIiwicG9vbGVkQnJvd3NlciIsInB1c2giLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImNoZWNrSW50ZXJ2YWwiLCJzZXRJbnRlcnZhbCIsImNsZWFySW50ZXJ2YWwiLCJzZXRUaW1lb3V0IiwiRXJyb3IiLCJyZWxlYXNlIiwiY3JlYXRlUGFnZSIsInBhZ2UiLCJuZXdQYWdlIiwic2V0VXNlckFnZW50Iiwic2V0Vmlld3BvcnQiLCJ3aWR0aCIsImhlaWdodCIsInNldFJlcXVlc3RJbnRlcmNlcHRpb24iLCJvbiIsInJlcSIsInJlc291cmNlVHlwZSIsImluY2x1ZGVzIiwiYWJvcnQiLCJjb250aW51ZSIsImlzQ29ubmVjdGVkIiwiYnJvd3NlcnNUb0Nsb3NlIiwiZmlsdGVyIiwiY2xvc2UiLCJlcnJvciIsImRlc3Ryb3kiLCJhbGwiLCJtYXAiLCJicm93c2VyUG9vbCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./lib/browser-pool.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ftwitter%2Fextract-with-session%2Froute&page=%2Fapi%2Ftwitter%2Fextract-with-session%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftwitter%2Fextract-with-session%2Froute.ts&appDir=%2Fhome%2Fvalentinedev%2FDownloads%2Faltreach-session%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fvalentinedev%2FDownloads%2Faltreach-session&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();